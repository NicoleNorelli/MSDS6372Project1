options('max.print'=200)
missingData
dim(missingData)
options('max.print'=100000)
missingData
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
summary(CarData$Engine.Fuel.Type)
dim(CarData)
which(CarData[rowSums(is.na(CarData)) > 0,])
library(tidyverse)
# You need to adjust the work environment to run this code
setwd("/Users/mingyang/Desktop/SMU/Applied Statistics/MSDS6372Project1")
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# In case there are NA character values
CarData[CarData=='NA'] <- NA
# Check the reading - can later be deleted
head(CarData)
str(CarData)
dim(CarData)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
summary(CarData$Engine.Fuel.Type)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Look at summary of data
summary(CarData)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
summary(CarData$Engine.Fuel.Type)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
summary(CarData$Engine.Fuel.Type)
library(tidyverse)
CarData %>% select(Engine.Fuel.Type) %>% filter(is.na())
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
summary(CarData$Engine.Fuel.Type)
CarData %>% select(Engine.Fuel.Type) %>% filter(Engine.Fuel.Type=="")
CarData %>% filter(Engine.Fuel.Type=="")
CarData %>% filter(Engine.Fuel.Type=="")
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
missingData
summary(CarData$Engine.Fuel.Type)
CarData %>% filter(Engine.Fuel.Type=="")
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
CatData %>% filter(is.na(Market.Category))
CatData %>% filter(is_na(Market.Category))
CatData %>% filter(Market.Category=="N/A")
CarData %>% filter(Market.Category=="N/A")
summary(carData$Market.Category)
summary(CarData$Market.Category)
marketNA = CarData %>% filter(Market.Category=="N/A")
dim(marketNA)
summary(CarData$Engine.Fuel.Type)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# In case there are NA character values
CarData[CarData==''] <- "regular unleaded"
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
summary(CarData$Engine.Fuel.Type)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# In case there are NA character values
CarData[CarData$Engine.Fuel.Type==''] <- "regular unleaded"
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# In case there are NA character values
CarData[Engine.Fuel.Type==''] <- "regular unleaded"
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
summary(CarData$Engine.Fuel.Type)
summary(CarData$Market.Category)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Check the reading - can later be deleted
head(CarData)
str(CarData)
dim(CarData)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
# Look at summary of data
summary(CarData)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
missingData
dim(missingData)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Mazda RX model Engine Cylinders to 0
CarData$Engine.Cylinders = ifelse(CarData$Make=="Mazda"&is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Mazda RX model Engine Cylinders to 0
CarData$Engine.Cylinders = ifelse(CarData$Make=="Mazda"&is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Mazda RX model Engine Cylinders to 0
CarData$Engine.Cylinders = ifelse(CarData$Make=="Mazda"&is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
CarData %>% filter(Make=="Tesla")
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
CarData %>% filter(Make=="Tesla")
summary(CarData$Market.Category)
summary(CarData$Market.Category)
summary(CarData$Market.Category)
CarData %>% select(Market.Category)
marketCat = CarData %>% select(Market.Category)
dim(marketCat)
head(Market.Category, 100)
head(marketCat,100)
# Looking at what to do with Market.Category variable
marketCat = CarData %>% select(MSPR,Market.Category)
# Looking at what to do with Market.Category variable
marketCat = CarData %>% select(MSRP,Market.Category)
dim(marketCat)
head(marketCat,100)
summary(CarData$Market.Category)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
str = "Hatchback,Factory Tuner,High-Performance";
str
dim(marketCat)
count(marketCat)
marketCat
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = data.frame("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
dim(marketCat)
marketCat
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = dataframe(marketCat)
marketCat = data.frame(marketCat)
marketCat
marketCat[1]
marketCat[1,1]
grepl(marketCat[1,1],str)
grepl(marketCat[1,6],str)
grepl(marketCat[1,6],str)
marketCat[1,6]
marketCat
marketCat[1,1]
marketCat[1,2]
marketCat[2,2]
marketCat[2,1]
grepl(marketCat[6,1],str)
str = "Hatchback,Factory Tuner,High-Performance,N/A";
grepl(marketCat[11,1],str)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
CarData['Crossover'] <- NA
CarData['Diesel'] <- NA
CarData['Exotic'] <- NA
CarData['Luxury'] <- NA
CarData['High-Performance'] <- NA
CarData['Factory Tuner'] <- NA
CarData['Performance'] <- NA
CarData['Flex Fuel'] <- NA
CarData['Hatchback'] <- NA
CarData['Hybrid'] <- NA
CarData['N/A'] <- NA
str(CarData)
dim(CarData)[1]
CarData$Market.Category[100]
CarData$Market.Category[101]
CarData$Market.Category[1001]
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
marketCat
dim(marketCat)[1]
CarData["Crossover"]
CarData(1,"Crossover")
CarData("Crossover")[1]
CarData("Crossover")
CarData["Crossover"]
CarData["Crossover"][1]
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
str = "Hatchback,Factory Tuner,High-Performance,N/A";
grepl(marketCat[11,1],str)
# Add each Market Category as column
CarData['Crossover'] <- "No"
CarData['Diesel'] <- "No"
CarData['Exotic'] <- "No"
CarData['Luxury'] <- "No"
CarData['High-Performance'] <- "No"
CarData['Factory Tuner'] <- "No"
CarData['Performance'] <- "No"
CarData['Flex Fuel'] <- "No"
CarData['Hatchback'] <- "No"
CarData['Hybrid'] <- "No"
CarData['N/A'] <- "No"
str(CarData)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
str = "Hatchback,Factory Tuner,High-Performance,N/A";
grepl(marketCat[11,1],str)
# Add each Market Category as column
CarData['Crossover'] <- NA
CarData['Diesel'] <- NA
CarData['Exotic'] <- NA
CarData['Luxury'] <- NA
CarData['High-Performance'] <- NA
CarData['Factory Tuner'] <- NA
CarData['Performance'] <- NA
CarData['Flex Fuel'] <- NA
CarData['Hatchback'] <- NA
CarData['Hybrid'] <- NA
CarData['N/A'] <- NA
str(CarData)
# Use For loop to fill in Yes/No
for(j in 1:dim(marketCat)[1]){
CarData[marketCat[j,1]] = ifelse(grepl(marketCat[j,1],CarData$Market.Category),"Yes","No")
}
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style","Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
str(CarData)
summary(CarData$Market.Category)
library(tidyverse)
# You need to adjust the work environment to run this code
setwd("/Users/mingyang/Desktop/SMU/Applied Statistics/MSDS6372Project1")
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
str = "Hatchback,Factory Tuner,High-Performance,N/A";
grepl(marketCat[11,1],str)
# Add each Market Category as column
CarData['Crossover'] <- NA
CarData['Diesel'] <- NA
CarData['Exotic'] <- NA
CarData['Luxury'] <- NA
CarData['High-Performance'] <- NA
CarData['Factory Tuner'] <- NA
CarData['Performance'] <- NA
CarData['Flex Fuel'] <- NA
CarData['Hatchback'] <- NA
CarData['Hybrid'] <- NA
CarData['N/A'] <- NA
str(CarData)
# Use For loop to fill in Yes/No to each Market Category column
for(j in 1:dim(marketCat)[1]){
CarData[marketCat[j,1]] = ifelse(grepl(marketCat[j,1],CarData$Market.Category),"Yes","No")
}
library(tidyverse)
# You need to adjust the work environment to run this code
setwd("/Users/mingyang/Desktop/SMU/Applied Statistics/MSDS6372Project1")
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A (Note: Performance column will be handled individually becuase of presence of High-Performance)
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
CarData['Crossover'] <- NA
CarData['Diesel'] <- NA
CarData['Exotic'] <- NA
CarData['Luxury'] <- NA
CarData['High-Performance'] <- NA
CarData['Factory Tuner'] <- NA
CarData['Performance'] <- NA
CarData['Flex Fuel'] <- NA
CarData['Hatchback'] <- NA
CarData['Hybrid'] <- NA
CarData['N/A'] <- NA
str(CarData)
# Use For loop to fill in Yes/No to each Market Category column
for(j in 1:dim(marketCat)[1]){
CarData[marketCat[j,1]] = ifelse(grepl(marketCat[j,1],CarData$Market.Category),"Yes","No")
}
str(CarData)
# Performance is being handled individually...
CarData$Performance = ifelse(grepl("Performance",CarData$Market.Category)&(!grepl("High-Performance",CarData$Market.Category)),"Yes","No")
str(CarData)
CarData %>% select(Market.Category,Crossover,Diesel,Exotic,Luxury,High-Performance,"Factory Tuner",Performance,"Flex Fuel",Hatchback,Hybrid,N/A)
# Read in data under variable CarData
CarData = read.csv("data1.csv")
# Fixing three empty values in CarData$Engine.Fuel.Type, after research they are regular unleaded
CarData$Engine.Fuel.Type = ifelse(CarData$Engine.Fuel.Type=="","regular unleaded",CarData$Engine.Fuel.Type)
# Fixing Engine Cylinders to 0 -- Mazda RX or Electrical Vehicle
CarData$Engine.Cylinders = ifelse(is.na(CarData$Engine.Cylinders),0,CarData$Engine.Cylinders)
# Fixing Tesla Model S with Number.of.Doors missing
CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Tesla HP with mean HP found online of 510
#CarData$Number.of.Doors = ifelse(CarData$Make=="Tesla"&is.na(CarData$Number.of.Doors),4,CarData$Number.of.Doors)
# Fixing Ferrari FF 2013 Number.of.Doors to 2 -- Google research
CarData$Number.of.Doors = ifelse(CarData$Make=="Ferrari"&is.na(CarData$Number.of.Doors),2,CarData$Number.of.Doors)
#Market.Category: Crossover,Diesel,Exotic,Luxury,High-Performance,Factory Tuner,Performance,Flex Fuel,Hatchback,Hybrid,N/A (Note: Performance column will be handled individually becuase of presence of High-Performance)
marketCat = c("Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Flex Fuel","Hatchback","Hybrid","N/A")
marketCat = data.frame(marketCat)
str = "Hatchback,Factory Tuner,High-Performance,N/A";
grepl(marketCat[11,1],str)
# Add each Market Category as column
CarData['Crossover'] <- NA
CarData['Diesel'] <- NA
CarData['Exotic'] <- NA
CarData['Luxury'] <- NA
CarData['High-Performance'] <- NA
CarData['Factory Tuner'] <- NA
CarData['Performance'] <- NA
CarData['Flex Fuel'] <- NA
CarData['Hatchback'] <- NA
CarData['Hybrid'] <- NA
CarData['N/A'] <- NA
str(CarData)
# Use For loop to fill in Yes/No to each Market Category column
for(j in 1:dim(marketCat)[1]){
CarData[marketCat[j,1]] = ifelse(grepl(marketCat[j,1],CarData$Market.Category),"Yes","No")
}
# Performance is being handled individually...
CarData$Performance = ifelse(grepl("Performance",CarData$Market.Category)&(!grepl("High-Performance",CarData$Market.Category)),"Yes","No")
CarData %>% select(Market.Category,Crossover,Diesel,Exotic,Luxury,High-Performance,"Factory Tuner",Performance,"Flex Fuel",Hatchback,Hybrid,N/A)
CarData %>% select(Market.Category,Crossover,Diesel,Exotic,Luxury,"High-Performance","Factory Tuner",Performance,"Flex Fuel",Hatchback,Hybrid,N/A)
CarData %>% select(Market.Category)
CarData %>% select(Market.Category,Performance,High-Performance)
CarData %>% select(Market.Category,Performance,'High-Performance')
CarData %>% select(Market.Category,Performance,'High-Performance','Flex Fuel')
# Convert factor variables
variables.to.factor = c("Make","Model","Engine.Fuel.Type","Transmission.Type","Driven_Wheels","Market.Category","Vehicle.Size","Vehicle.Style","Crossover","Diesel","Exotic","Luxury","High-Performance","Factory Tuner","Performance","Flex Fuel","Hatchback","Hybrid","N/A")
CarData[variables.to.factor] = lapply(CarData[variables.to.factor],factor)
# Look at summary of data
summary(CarData)
# Adjust column names - get ride of - and space in the column names to make analysis easier
CarData %>%
rename(
EngineFuelType = Engine.Fuel.Type,
EngineHP = Engine.HP,
EngineCylinders = Engine.Cylinders,
TransmissionType = Transmission.Type,
DrivenWheels = Driven_Wheels,
NumberOfDoors = Number.of.Doors,
MarketCategory = Market.Category,
VehicleSize = Vehicle.Size,
VehicleStyle = Vehicle.Style,
HighwayMPG = highway.MPG,
CityMPG = city.mpg,
HighPerformance = `High-Performance`,
FactoryTuner = `Factory Tuner`,
FlexFuel = `Flex Fuel`,
N_A = `N/A`
)
# Look at summary of data
summary(CarData)
# Adjust column names - get ride of - and space in the column names to make analysis easier
# Also make column names more uniform
CarData = CarData %>%
rename(
EngineFuelType = Engine.Fuel.Type,
EngineHP = Engine.HP,
EngineCylinders = Engine.Cylinders,
TransmissionType = Transmission.Type,
DrivenWheels = Driven_Wheels,
NumberOfDoors = Number.of.Doors,
MarketCategory = Market.Category,
VehicleSize = Vehicle.Size,
VehicleStyle = Vehicle.Style,
HighwayMPG = highway.MPG,
CityMPG = city.mpg,
HighPerformance = `High-Performance`,
FactoryTuner = `Factory Tuner`,
FlexFuel = `Flex Fuel`,
N_A = `N/A`
)
# Look at summary of data
summary(CarData)
# Looking at what to do with Market.Category variable
marketCat = CarData %>% select(MSRP,Market.Category)
missingData = CarData[rowSums(is.na(CarData)) > 0,]
missingData
dim(missingData)
options(max.print=999999)
missingData
